import java.util.*;

public class WordBreak {
    public static boolean wordBreak(String s, Set<String> wordDict) {
        return wordBreakHelper(s, wordDict, new HashMap<>());
    }

    private static boolean wordBreakHelper(String s, Set<String> wordDict, Map<String, Boolean> memo) {
        if (memo.containsKey(s)) return memo.get(s);
        if (s.isEmpty()) return true;

        for (String word : wordDict) {
            if (s.startsWith(word)) {
                if (wordBreakHelper(s.substring(word.length()), wordDict, memo)) {
                    memo.put(s, true);
                    return true;
                }
            }
        }

        memo.put(s, false);
        return false;
    }

    public static void main(String[] args) {
        Set<String> wordDict = new HashSet<>(Arrays.asList("apple", "pen", "applepen", "pine", "pineapple"));
        System.out.println(wordBreak("pineapplepenapple", wordDict)); // true
        System.out.println(wordBreak("catsandog", wordDict)); // false
    }
}
